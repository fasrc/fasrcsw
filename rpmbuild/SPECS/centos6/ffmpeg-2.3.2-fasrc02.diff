2c2
< #
---
> 
33c33
< %define summary_static ...FIXME...
---
> %define summary_static FFMPEG version 2.4.2
40,41c40,41
< URL: http://...FIXME...
< Source: %{name}-%{version}.tar.gz
---
> URL: http://ffmpeg.org/releases/ffmpeg-2.4.2.tar.bz2
> Source: %{name}-%{version}.tar.bz2
59,61c59,60
< # Macros for setting app data 
< # The first set can probably be left as is
< # the nil construct should be used for empty values
---
> # enter a description, often a paragraph; unless you prefix lines with spaces, 
> # rpm will format it, so no need to worry about the wrapping
62a62,65
> %description
> FFmpeg is the leading multimedia framework, able to decode, encode, transcode, mux, demux, stream, filter and play pretty much anything that humans and machines have created.
> 
> 
71,73c74
< %define buildhostversion 1
< %define compiler %( if [[ %{getenv:TYPE} == "Comp" || %{getenv:TYPE} == "MPI" ]]; then if [[ -n "%{getenv:FASRCSW_COMPS}" ]]; then echo "%{getenv:FASRCSW_COMPS}"; fi; else echo "system"; fi)
< %define mpi %(if [[ %{getenv:TYPE} == "MPI" ]]; then if [[ -n "%{getenv:FASRCSW_MPIS}" ]]; then echo "%{getenv:FASRCSW_MPIS}"; fi; else echo ""; fi)
---
> %define buildhostversion 1 
75,76c76
< 
< %define builddependencies %{nil}
---
> %define builddependencies libvorbis/1.3.4-fasrc01 xvidcore/1.3.3-fasrc01 libtheora/1.1.1-fasrc01 yasm/1.3.0-fasrc01 opus/1.0.3-fasrc01 fdk-aac/0.1.3-fasrc01 lame/3.99.5-fasrc01 x264/20140814-fasrc01 faac/1.28-fasrc01 libvpx/v1.3.0-fasrc01 opencore-amr/0.1.3-fasrc01 libass/0.11.2-fasrc01 fribidi/0.19.1-fasrc01 enca/1.15-fasrc01 libogg/1.3.2-fasrc01
81,85d80
< 
< # apptags
< # For aci-ref database use aci-ref-app-category and aci-ref-app-tag namespaces and separate tags with a semi-colon
< # aci-ref-app-category:Programming Tools; aci-ref-app-tag:Compiler
< %define apptags %{nil} 
87,97c82
< 
< 
< 
< #
< # enter a description, often a paragraph; unless you prefix lines with spaces, 
< # rpm will format it, so no need to worry about the wrapping
< #
< # NOTE! INDICATE IF THERE ARE CHANGES FROM THE NORM TO THE BUILD!
< #
< %description
< 
---
> %define apptags aci-ref-app-category:Utilities aci-ref-app-tag:Video decoding
137,138c122,134
< #module load NAME/VERSION-RELEASE
< 
---
> #module load xvidcore
> #module load libtheora
> #module load yasm
> #module load opus
> #module load fdk-aac
> #module load lame
> #module load x264
> #module load faac
> #module load libvpx
> #module load opencore-amr
> #module load libass
> #module load fribidi
> #module load enca
141a138,141
> for m in %{builddependencies}
> do
>     module load ${m}
> done
143,156c143
< ./configure --prefix=%{_prefix} \
< 	--program-prefix= \
< 	--exec-prefix=%{_prefix} \
< 	--bindir=%{_prefix}/bin \
< 	--sbindir=%{_prefix}/sbin \
< 	--sysconfdir=%{_prefix}/etc \
< 	--datadir=%{_prefix}/share \
< 	--includedir=%{_prefix}/include \
< 	--libdir=%{_prefix}/lib64 \
< 	--libexecdir=%{_prefix}/libexec \
< 	--localstatedir=%{_prefix}/var \
< 	--sharedstatedir=%{_prefix}/var/lib \
< 	--mandir=%{_prefix}/share/man \
< 	--infodir=%{_prefix}/share/info
---
> ./configure --enable-shared --enable-gpl --enable-libass --enable-libfdk-aac --enable-libopus --enable-libfaac --enable-libmp3lame --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libtheora --enable-libvorbis --enable-libx264 --enable-libxvid --enable-nonfree --enable-postproc --enable-version3 --enable-x11grab --enable-libvpx --prefix=%{_prefix}
264d250
< %{buildcomments}
272,273c258,259
< ---- prerequisite apps (uncomment and tweak if necessary)
< for i in string.gmatch("%{rundependencies}","%%S+") do 
---
> -- prerequisite apps (uncomment and tweak if necessary)
> for i in string.gmatch(%{rundependencies},"%%S+") do 
275,276c261
<         a = string.match(i,"^[^/]+")
<         if not isloaded(a) then
---
>         if not isloaded(i) then
281a267,279
> ---- environment changes (uncomment what's relevant)
> setenv("FFMPEG_HOME",              "%{_prefix}")
> setenv("FFMPEG_LIB",               "%{_prefix}/lib")
> setenv("FFMPEG_INCLUDE",           "%{_prefix}/include")
> prepend_path("PATH",               "%{_prefix}/bin")
> prepend_path("CPATH",              "%{_prefix}/include")
> prepend_path("FPATH",              "%{_prefix}/include")
> prepend_path("LD_LIBRARY_PATH",    "%{_prefix}/lib")
> prepend_path("LIBRARY_PATH",       "%{_prefix}/lib")
> prepend_path("MANPATH",            "%{_prefix}/share/man")
> prepend_path("PKG_CONFIG_PATH",    "%{_prefix}/lib/pkgconfig")
> EOF
> 
283,284d280
< ---- environment changes (uncomment what is relevant)
< --setenv("TEMPLATE_HOME",       "%{_prefix}")
286,300d281
< --prepend_path("PATH",                "%{_prefix}/bin")
< --prepend_path("CPATH",               "%{_prefix}/include")
< --prepend_path("FPATH",               "%{_prefix}/include")
< --prepend_path("INFOPATH",            "%{_prefix}/info")
< --prepend_path("LD_LIBRARY_PATH",     "%{_prefix}/lib")
< --prepend_path("LIBRARY_PATH",        "%{_prefix}/lib")
< --prepend_path("LD_LIBRARY_PATH",     "%{_prefix}/lib64")
< --prepend_path("LIBRARY_PATH",        "%{_prefix}/lib64")
< --prepend_path("MANPATH",             "%{_prefix}/man")
< --prepend_path("PKG_CONFIG_PATH",     "%{_prefix}/pkgconfig")
< --prepend_path("PATH",                "%{_prefix}/sbin")
< --prepend_path("INFOPATH",            "%{_prefix}/share/info")
< --prepend_path("MANPATH",             "%{_prefix}/share/man")
< --prepend_path("PYTHONPATH",          "%{_prefix}/site-packages")
< EOF
303c284,285
< cat > $FASRCSW_DEV/appdata/%{modulename}.%{type}.dat <<EOF
---
> cat > $FASRCSW_DEV/appdata/%{modulename}.yaml <<EOF
> ---
306a289
> module              : %{modulename}
311,312d293
< compiler            : %{compiler}
< mpi                 : %{mpi}
324a306
> 
